name: Release
on:
  push:
    branches:
      - master

jobs:
  build_artifact:
    if: github.repository == 'hashicorp/terraform-cdk'
    runs-on: ubuntu-latest
    container:
      image: hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"

    steps:
      - uses: actions/checkout@v2
      - name: installing dependencies
        run: |
          yarn install
      - name: compile
        run: |
          tools/align-version.sh
          yarn build
      - name: test
        run: |
          yarn test
      - name: create bundle
        run: yarn package
      - name: integration tests
        run: yarn integration
        env:
          TERRAFORM_CLOUD_TOKEN: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist
      - name: Release to github
        run: yarn release-github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  release_npm:
    name: Release to Github Packages NPM regitry
    needs: build_artifact
    runs-on: ubuntu-latest
    container:
      image: hashicorp/jsii-terraform
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Release
        run: npx -p jsii-release jsii-release-npm
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  release_pypi:
    name: Release to PyPi
    needs: build_artifact
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Release
        run: npx -p jsii-release jsii-release-pypi
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

  release_maven:
    name: Release to Maven
    needs: build_artifact
    runs-on: ubuntu-latest
    if: false # Disable until maven credentials are setup
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Release
        run: npx -p jsii-release jsii-release-maven
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_STAGING_PROFILE_ID: ${{ secrets.MAVEN_STAGING_PROFILE_ID }}

  release_maven_github:
    name: Release to GitHub Maven
    runs-on: ubuntu-latest
    needs: build_artifact
    steps:
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/checkout@v2
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish package
        run: npx -p jsii-release jsii-release-maven
        env:
          MAVEN_SERVER_ID: github
          MAVEN_USERNAME: ${{ github.actor }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_REPOSITORY_URL: "https://maven.pkg.github.com/${{ github.repository }}"
          
  release_homebrew:
    name: Release to Homebrew
    # The branch or tag ref that triggered the workflow run.
    if: startsWith(github.event.head_commit.message, 'Bump version')
    needs: release_npm
    runs-on: ubuntu-latest
    steps:
      # extract version number from package.json
      - uses: actions/checkout@v2
      - name: version
        id: get_version
        run: |
          version=$(node -p "require('./package.json').version")
          echo "::set-output name=version::${version}"
      # A PR will be sent to github.com/Homebrew/homebrew-core to update this formula:
      - uses: mislav/bump-homebrew-formula-action@v1
        with:
          formula-name: cdktf
          download-url: https://registry.npmjs.org/cdktf-cli/-/cdktf-cli-${{ steps.get_version.outputs.version }}.tgz
          commit-message: cdktf ${{ steps.get_version.outputs.version }}
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_COMMITTER_TOKEN }}
